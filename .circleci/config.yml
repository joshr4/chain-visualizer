`version: 2
jobs:
    # The build job
    build:
        working_directory: ~/project
        docker:
            - image: circleci/node:10
        steps:
            - checkout
            - restore_cache:
                key: CircleCI-{{ .Branch }}-{{ checksum "package.json" }}
            - run: npm install
            - save_cache:
                key: CircleCI-{{ .Branch }}-{{ checksum "package.json" }}
                paths:
                    - "node_modules"
            - run:
                name: Building
                command: npm run build
            # Cache the build folder for the deploy job
            - save_cache:
                key: v1-build-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
                paths:
                    - build

    # The deploy job
    deploy:
        working_directory: ~/project
        docker:
            - image: circleci/node:10
        steps:
            # Log the current branch
            - run:
                name: Show current branch
                command: echo ${CIRCLE_BRANCH}
            # Restore cache from the build job which contains the
            # build folder that needs to be deployed
            - restore_cache:
                key: v1-build-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_SHA1 }}
            # Install AWS cli
            - run:
                name: Install aws cli
                command:
                    sudo apt-get -y -qq install awscli
            # Set the signature version for the S3 auth
            - run:
                name: Setting Signature Version 4 for S3 Request Authentication
                command: aws configure set default.s3.signature_version s3v4
            # Deploy to the S3 bucket corresponding to the current branch
            - run:
                name: Deploy to S3
                command: aws --region us-east-1 s3 sync build/ s3://chain-visualizer/ --delete

workflows:
    version: 2
    # The build and deploy workflow
    build_and_deploy:
        jobs:
            - build
            # The deploy job will only run on the filtered branches and
            # require the build job to be successful before it starts
            - deploy:
                requires:
                    - build
